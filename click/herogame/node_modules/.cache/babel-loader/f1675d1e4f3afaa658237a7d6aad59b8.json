{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\djthe\\\\Clicky-Game\\\\click\\\\herogame\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\djthe\\\\Clicky-Game\\\\click\\\\herogame\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\djthe\\\\Clicky-Game\\\\click\\\\herogame\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\djthe\\\\Clicky-Game\\\\click\\\\herogame\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\djthe\\\\Clicky-Game\\\\click\\\\herogame\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\djthe\\\\Clicky-Game\\\\click\\\\herogame\\\\src\\\\App.js\";\n//imports dependencies and files\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar/\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Card from \"./components/Card/Card\";\nimport Footer from \"./components/Footer/Footer\";\nimport hero from \"./hero.json\";\nimport \"./App.css\"; //sets state to 0 or empty\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      hero: hero,\n      clickedHero: [],\n      score: 0\n    };\n\n    _this.imageClick = function (event) {\n      var currentHero = event.target.alt;\n      var HeroAlreadyClicked = _this.state.clickedHero.indexOf(currentHero) > -1; //if you click on a hero that has already been selected, the game is reset and cards reordered\n\n      if (HeroAlreadyClicked) {\n        _this.setState({\n          hero: _this.state.hero.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedHero: [],\n          score: 0\n        });\n\n        alert(\"You lose. Play again?\"); //if you click on an available hero, your score is increased and cards reordered\n      } else {\n        _this.setState({\n          hero: _this.state.hero.sort(function (a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedhero: _this.state.clickedHero.concat(currentHero),\n          score: _this.state.score + 1\n        }, //if you get all 12 hero correct you get a congrats message and the game resets        \n        function () {\n          if (_this.state.score === 12) {\n            alert(\"Yay! You Win!\");\n\n            _this.setState({\n              hero: _this.state.hero.sort(function (a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedHero: [],\n              score: 0\n            });\n          }\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    //the order of components to be rendered: navbar, jumbotron, Card, footer \n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        score: this.state.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.state.hero.map(function (hero) {\n        return React.createElement(Card, {\n          imageClick: _this2.imageClick,\n          id: hero.id,\n          key: hero.id,\n          image: hero.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      })), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["c:\\Users\\djthe\\Clicky-Game\\click\\herogame\\src\\App.js"],"names":["React","Component","Navbar","Jumbotron","Card","Footer","hero","App","state","clickedHero","score","imageClick","event","currentHero","target","alt","HeroAlreadyClicked","indexOf","setState","sort","a","b","Math","random","alert","clickedhero","concat","map","id","image"],"mappings":"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","sourcesContent":["//imports dependencies and files\nimport React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar/\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Card from \"./components/Card/Card\";\nimport Footer from \"./components/Footer/Footer\";\nimport hero from \"./hero.json\";\nimport \"./App.css\";\n\n\n//sets state to 0 or empty\nclass App extends Component {\n  state = {\n    hero,\n    clickedHero: [],\n    score: 0\n  };\n\n//when you click on a card ... the hero is taken out of the array\n  imageClick = event => {\n    const currentHero = event.target.alt;\n    const HeroAlreadyClicked =\n      this.state.clickedHero.indexOf(currentHero) > -1;\n\n//if you click on a hero that has already been selected, the game is reset and cards reordered\n    if (HeroAlreadyClicked) {\n      this.setState({\n        hero: this.state.hero.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedHero: [],\n        score: 0\n      });\n        alert(\"You lose. Play again?\");\n\n//if you click on an available hero, your score is increased and cards reordered\n    } else {\n      this.setState(\n        {\n          hero: this.state.hero.sort(function(a, b) {\n            return 0.5 - Math.random();\n          }),\n          clickedhero: this.state.clickedHero.concat(\n            currentHero\n          ),\n          score: this.state.score + 1\n        },\n//if you get all 12 hero correct you get a congrats message and the game resets        \n        () => {\n          if (this.state.score === 12) {\n            alert(\"Yay! You Win!\");\n            this.setState({\n              hero: this.state.hero.sort(function(a, b) {\n                return 0.5 - Math.random();\n              }),\n              clickedHero: [],\n              score: 0\n            });\n          }\n        }\n      );\n    }\n  };\n\n//the order of components to be rendered: navbar, jumbotron, Card, footer \n  render() {\n    return (\n      <div>\n        <Navbar \n          score={this.state.score}\n        />\n        <Jumbotron />\n        <div className=\"wrapper\">\n          {this.state.hero.map(hero => (\n            <Card\n              imageClick={this.imageClick}\n              id={hero.id}\n              key={hero.id}\n              image={hero.image}\n            />\n          ))}\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}